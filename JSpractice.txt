1.Anagram
i/p:-["eat","tea","tan","ate","nat","bat"]Output: [["bat"],["nat","tan"],["ate","eat","tea"]]
i/p :- [""]Output: [[""]]
i/p:- ["a"]Output: [["a"]]
let str = ["eat","tea","tan","ate","nat","bat"]

const anagramsort=(st)=>{
let arr=[];
for(let i=0;i<st.length;i++){
let temp=sort(st[i]);
if(arr[temp]){
arr[temp].push(st[i])
}else{
arr[temp]=[st[i]]
}
}
let result=Object.values(arr);
return result
}

function sort(str){
return str.split('').sort().join('')
}

console.log(anagramsort(str))




2.Transform matrix
i/p -[[1,2,3],[4,5,6],[7,8,9]]   Output: [[7,4,1],[8,5,2],[9,6,3]]
i/p -[[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]  Output: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]
let matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]];

let rotateMatrix=(m)=>{
const len=m.length;
for(let i=0;i<len;i++){
for(let j=i;j<len;j++){
let temp=m[i][j];
m[i][j]=m[j][i];
m[j][i]=temp;
}
}

for(let i=0;i<len;i++){
m[i].reverse();
}
return m
}

console.log(rotateMatrix(matrix))

[
[1, 2, 3], 
[4, 5, 6], 
[7, 8, 9]]

[
[1, 4, 7], 
[2, 5, 8], 
[3, 6, 9]]

[7, 4, 1], 
[8, 5, 2], 
[9, 6, 3]

[
[15, 13, 2, 5], 
[14, 3, 4, 1], 
[12, 6, 8, 9], 
[16, 7, 10, 11]
]



3.Binery Search
i/p Input: nums = [4,5,6,7,0,1,2], target = 0Output: 4
i/p Input: nums = [4,5,6,7,0,1,2], target = 3Output: -1
i/p Input: nums = [1], target = 0Output: -1

let nums = [1];
let t = 0 
let binerySearch=(num,t)=>{
let start=0;
let n=num.length;
let end=n-1;
for(let i=0;i<num.length;i++){
let mid=Math.floor((start+end)/2)

if(t==num[mid]){
return mid
}else if(t<num[mid]){
start=mid-1
}else if(t>num[mid]){
end=mid+1
}

}
return -1
}

console.log(binerySearch(nums,t))